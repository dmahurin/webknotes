#!/usr/bin/env python

import sys
import re

print('<html><head><script type="text/javascript" src="chopro.js"></script></head><body><pre>')

chords = []
chord_positions = []

def get_chord_line(textline):
	global chords
	global chord_positions
	chars = [x for x in textline]
	textline = ''
	pos = 0;
	while(len(chords)):
		chord = chords.pop(0)
		chord_pos = chord_positions.pop(0)
		while(pos < chord_pos):
			c = chars.pop(0) if len(chars) else ' '
			textline += c
			pos += 1
		textline += '['
		textline += chord
		textline += ']'
	textline += ''.join(chars)
	chords = []
	chord_positions = []
	return textline

for line in sys.stdin:
	line = line.rstrip()

	# A B#m C(text) (text)D E#maj/F#min G7
	is_chordline = re.match(r'^(\s*(\([^\s\)]+\))?[ABCDEFG]#?(b|m|maj|min|sus)?[2-9]?([\/\-][ABCDEFG]#?(b|m|maj|min|sus)?[2-9]?)?(\([^\s\)]+\))?(?=\s|$))+\s*$', line);

	# store chord positions
	if(is_chordline):
		if(len(chords)):
			print(get_chord_line(''))

		chords = []
		chord_positions = []
		pos = 0
		while(line != ''):
			n = len(re.match(r'(\s*)', line).group(1))
			pos += n
			line = line[n:]

			chord = ''
			chord_pos = pos

			m = re.match(r'(\S*)', line)
			chord = m.group(1)
			n = len(chord)
			pos += n
			line = line[n:]

			if(chord != ''):
				chords.append(chord);
				chord_positions.append(chord_pos);
	elif(len(chords)):
		print(get_chord_line(line))

		# add newline if original line was blank
		if(line == ''):
			print('')
	else:
		print(line)

if(len(chords)):
	print(get_chord_line(''))

print ("</pre></body></html>")

